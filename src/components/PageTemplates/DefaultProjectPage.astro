---
import { projects } from "../../lib/data/projectData.js"
import {DefaultTitle} from "../../react-app/Components/TitleComponent";
import SubTitle from "../SubTitle.astro";
import Title from "../Title.astro"
import DefaultImage from "../DefaultImage.astro";
import DefaultPara from "../DefaultPara.astro";
import ProjectTitle from "../ProjectTitle.astro";
import "../../styles/global.css"
import {DefaultImg} from "../../react-app/Components/ImageComponent";
import { YouTube } from "astro-lazy-youtube-embed";

interface Props{
    projectToShow:string,
    titleClass:string,
}

const {projectToShow, titleClass} = Astro.props;

const filteredProject = projects.find((project)=> projectToShow === project.title);

---

<>
    <ProjectTitle className={"defaultTitle text-xl"} title={projectToShow}/>

    <div>
        {filteredProject.team.length == 1 ?
        (<Title title="Solo Project" />)
        :
            (
                    <div class="flex flex-wrap justify-center gap-2">
                        <div>
                            <Title className="text-center text-[1.2rem] font-bold" title="Developed by "/>
                        </div>
                        <div class="flex flex-wrap gap-1">
                            {filteredProject.team.map(teammber =>
                                <div>
                                    <Title className="text-center text-[1.1rem] font-bold" title={`${teammber}, `}/>
                                </div>)}
                        </div>
                    </div>
            )


            }
    </div>
<div class="flex flex-wrap justify-center items-start gap-10 md:gap-25">
    <div class="flex flex-col flex-1 justify-center gap-5 py-5">
        <div class="">
            <SubTitle className={"align-center text-center"} subTitleName={"Demonstrated Roles"}/>
        </div>
        <div class="flex flex-wrap flex-1 justify-center gap-2">
            {filteredProject.tags.roleTag.map(tag =>
                    <div class={"inline-block px-3 bg-[var(--tree-bark)] border-[var(--soil-umber)] rounded-xl border-4"} key={tag}>
                        {tag}
                    </div>)}
        </div>

    </div>

    <div class="flex flex-col align-center text-center gap-5 py-5 md:w-1/2">
        <div>
            <SubTitle className={"align-center text-center"} subTitleName={"Skills Demonstrated"}/>
        </div>
        <div class="flex flex-wrap justify-center gap-2">
            {filteredProject.tags.skillTags.map(tag =>
                    <div class={"inline-block px-3 bg-[var(--tree-bark)] border-[var(--soil-umber)] rounded-xl border-4"} key={tag}>
                        {tag}
                    </div>)}
        </div>

    </div>
</div>


    {filteredProject.sections.map((section) =>
    <div class="py-4 w-full">
        <div class="py-1">
            {section.title == "" ? <></> : <SubTitle subTitleName={section.title}/>}
        </div>

        {section.introP == "" ? <></> :
        <div>
            <DefaultPara para={section.introP}/>
        </div>}

        {section.uri.linkType == "img" ?
            (section.uri.link == "" ? <></> :

                        <div class={"py-1 w-full flex justify-center"}}>
                            <DefaultImg divclassName={"h-full max-w-[900px] shadow-sm border-[var(--soil-umber)] object-center border-[9px] rounded rounded-2xl md:shadow-xl/50 shadow-[var(--sun-ray)]"}
                                        source={section.uri.link} alt={section.title}/>
                        </div>
            )
            :
            (section.uri.link == "" ? <></> :

                        <div class="flex justify-center">
                            <YouTube class={"rounded-2xl max-w-[900px]"} title={section.title} videoId={section.uri.link}/>
                        </div>


            )
        }




        <div class="py-1">
            {section.p == "" ? <></> : <DefaultPara para={section.p}/>}
        </div>


    </div>)}
</>