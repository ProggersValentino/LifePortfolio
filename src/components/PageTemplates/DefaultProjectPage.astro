---
import { projects } from "../../lib/data/projectData.js"
import {DefaultTitle} from "../../react-app/Components/TitleComponent";
import SubTitle from "../SubTitle.astro";
import Title from "../Title.astro"
import DefaultImage from "../DefaultImage.astro";
import DefaultPara from "../DefaultPara.astro";
import ProjectTitle from "../ProjectTitle.astro";
import "../../styles/global.css"
import {DefaultImg} from "../react/ImageComponent";
import { YouTube } from "astro-lazy-youtube-embed";
import ContentCarasel from "../../components/ContentCarasel.astro"
import CardComponent from "../CardComponent.astro";

interface Props{
    projectToShow:string,
    titleClass:string,
}

const {projectToShow, titleClass} = Astro.props;

const filteredProject = projects.find((project)=> projectToShow === project.title);

---

<>
    <ProjectTitle className={"defaultTitle text-xl"} title={projectToShow}/>

    <div>
        {filteredProject.team.length == 1 ?
        (<div class="flex flex-wrap justify-center gap-2">
            <div>
                <Title className="text-center text-[1.2rem] font-bold" title="Solo Project"/>
            </div>
            </div>)
        :
            (
                    <div class="flex flex-wrap justify-center gap-2">
                        <div>
                            <Title className="text-center text-[1.2rem] font-bold" title="Developed by "/>
                        </div>
                        <div class="flex flex-wrap gap-1">
                            {filteredProject.team.map(teammber =>
                                <div>
                                    <Title className="text-center text-[1.1rem] font-bold" title={`${teammber}, `}/>
                                </div>)}
                        </div>
                    </div>
            )


            }
    </div>
    <div class="flex flex-col md:flex-row gap-2 py-5">

        {/* RIGHT SIDE -> Direct Contributions & Skills Demonstration */}
        {Array.isArray(filteredProject.displayURIs) && filteredProject.displayURIs.length > 0 && (
                <div class="flex-1 flex justify-center items-center">
                    {filteredProject.displayURIs.length === 1 ? (
                        filteredProject.displayURIs[0].linkType === "img" ? (
                            filteredProject.displayURIs[0].link === "" ? null : (
                                    <DefaultImg
                                            divclassName="h-full max-w-[900px] shadow-sm object-center rounded-2xl"
                                            source={filteredProject.displayURIs[0].link}
                                            alt={filteredProject.title}
                                    />
                            )
                        ) : (
                            filteredProject.displayURIs[0].link === "" ? null : (
                                    <YouTube
                                            class="rounded-2xl max-w-[900px]"
                                            title={filteredProject.title}
                                            videoId={filteredProject.displayURIs[0].link}
                                    />
                            )
                        )
                    ) : (
                            <ContentCarasel content={filteredProject.displayURIs} client:load />
                    )}
                </div>
        )}


        {/* LEFT SIDE */}
        <div class=`flex gap-6 ${filteredProject.displayURIs.length < 1 ? 'flex-wrap justify-center items-center' : 'flex-col shrink flex-initial justify-between md:w-1/4' } `>
            {/* Demonstrated Roles */}
            <div class="flex flex-col flex-1 justify-center gap-5">
                <SubTitle className="text-center" subTitleName="Direct Contributions" />
                <ul class="list-disc pl-5 flex flex-wrap justify-left gap-2">
                    {filteredProject.contributions.map((contribution, index) => (
                            <li key={index} class="text-left">
                                {contribution}
                            </li>
                    ))}
                </ul>
            </div>

            {/* Skills Demonstrated */}
            <div class="flex flex-col flex-1 justify-center gap-5">
                <SubTitle className="text-center" subTitleName="Skills Demonstrated" />
                <div class="flex flex-wrap justify-center gap-2">
                    {filteredProject.tags.skillTags.map(tag =>
                            <div class="inline-block px-3 bg-[var(--color-surface)] border-[var(--color-surface-elevated)] rounded-xl border-4" key={tag}>
                                {tag}
                            </div>
                    )}
                </div>
            </div>
        </div>


    </div>

    <div class="flex flex-wrap md:flex-nowrap justify-center items-start py-7 md:gap-15">
        <div class="flex flex-col space-y-4 w-full md:w-1/2">
            <div class="text-left">
                <SubTitle divClassName="text-center" class="text-left" subTitleName="About" />
            </div>

            <div class="flex flex-col gap-2">

                <div key={0} class="text-left">
                    {filteredProject.sections[0].introP}
                </div>

                <!--{filteredProject.sections.map((contribution, index) => (
                        <div key={index} class="text-left">
                            {contribution}
                        </div>
                ))}-->
            </div>
        </div>

        <div class="flex flex-col justify-center items-center w-full md:w-1/2">
            <div>
                <SubTitle class="" divClassName="text-center" subTitleName="Outcomes" />
            </div>
            <div class="flex flex-col gap-6">
                {filteredProject.outcomes.map((outcome, index) => (
                        <div key={index}>
                            <DefaultPara para={outcome} />
                        </div>
                ))}
            </div>
        </div>
    </div>



    <!--{filteredProject.sections.map((section) =>
    /*<div class="py-7 w-full">
        <div class="py-1">
            {section.title == "" ? <></> : <SubTitle className="text-center" subTitleName={section.title}/>}
        </div>

        {section.introP == "" ? <></> :
        <div>
            <DefaultPara para={section.introP}/>
        </div>}

        {Array.isArray(section.uri) && section.uri.length <= 1 ?
            (section.uri[0].linkType == "img" ?
                (section.uri[0].link == "" ? <></> :

                                <div class={"py-1 w-full flex justify-center"}}>
                                    <DefaultImg divclassName={"h-full max-w-[900px] shadow-sm object-center border-[9px] rounded rounded-2xl md:shadow-xl/50 shadow-[var(--sun-ray)]"}
                                                source={section.uri[0].link} alt={section.title}/>
                                </div>
                )
                :
                (section.uri[0].link == "" ? <></> :

                                <div class="py-4 flex justify-center">
                                    <YouTube class={"rounded-2xl max-w-[900px]"} title={section.title} videoId={section.uri[0].link}/>
                                </div>


                ))
            :
            <ContentCarasel content={section.uri} client:load/>

        }






        <div class="py-1">
            {section.p == "" ? <></> : <DefaultPara para={section.p}/>}
        </div>


    </div>*/)}-->
</>